{"version":3,"sources":["components/AddCategory.js","components/GiftItems.js","helpers/GiftUri.js","components/GiftGrid.js","components/hooks/useFetchGifs.js","components/Header.js","giftexpert.js","index.js"],"names":["AddCategory","setCategories","useState","input","setInput","onSubmit","e","preventDefault","trim","length","cats","type","placeholder","value","onChange","target","GiftItems","url","title","id","Card","className","CardMedia","height","component","image","alt","CardContent","Typography","gutterBottom","variant","giftSearch","categoria","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","useStyles","makeStyles","root","width","justifyContent","GiftGrid","classes","category","loading","state","setState","useEffect","then","setTimeout","useFetchGifs","Grid","container","CircularProgress","color","spacing","item","xs","xl","sm","lg","md","Header","GiftExpert","categories","cat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.84e1e685.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [input, setInput] = useState('');\r\n\r\n    const handleSubmit=(e)=>{\r\ne.preventDefault();\r\nif (input.trim().length>0) {\r\n    \r\n    setCategories(cats=>[input,...cats]);\r\n    setInput('');\r\n}\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n            type='text'\r\n            placeholder='Escribe cualquier cosa'\r\n            value={input}\r\n            onChange={(e)=>setInput(e.target.value)}\r\n            />\r\n           \r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes={\r\n    setCategories:PropTypes.func.isRequired\r\n}","import React from 'react'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nexport const GiftItems = ({url,id,title}) => {\r\n    \r\n    return (\r\n        // <div className=\"card animate__animated animate__jackInTheBox\">\r\n        //     <img\r\n        //     src={url}\r\n        //     alt={title}\r\n        //     />\r\n        //     <h3>{title}</h3>\r\n        // </div>\r\n        <Card className=\"animate__animated animate__jackInTheBox\">\r\n        <CardMedia\r\n        height=\"380\"\r\n        component=\"img\"\r\n          image={url}\r\n          alt=\"Contemplative Reptile\"\r\n        /> \r\n        <CardContent>\r\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {title}\r\n          </Typography>\r\n            </CardContent> \r\n         </Card>\r\n    )\r\n}\r\n","export const giftSearch =async(categoria)=>{\r\n    const url=`https://api.giphy.com/v1/gifs/search?api_key=VHIcexYRax83xWD6W8mEifppW0J3L7f0&q=${encodeURI(categoria)}&limit=10`\r\n    // const url='api.giphy.com/v1/gifs/search?api_key=VHIcexYRax83xWD6W8mEifppW0J3L7f0&q='+categoria+'&limit=10';\r\n    const resp =await fetch(url);\r\n    const {data}= await resp.json() ;\r\n  const gifs = data.map(img=>{\r\n      return {\r\n        url:img.images?.downsized_medium.url,\r\n          title:img.title,\r\n          id:img.id,\r\n          \r\n      }\r\n    });\r\n    \r\n    return gifs;\r\n}","import Grid from '@material-ui/core/Grid';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { GiftItems } from './GiftItems';\r\nimport { useFetchGifs } from './hooks/useFetchGifs';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      width: '100%',\r\n      justifyContent:'center'\r\n    },\r\n  });\r\n\r\n\r\nexport  const GiftGrid = ({categoria}) => {\r\n    const classes = useStyles();\r\nconst {data:images,loading}=useFetchGifs(categoria)\r\n\r\n\r\n//  giftSearch();\r\n    return (\r\n<>\r\n<h3>\r\n    {categoria}\r\n</h3>\r\n\r\n{loading&&\r\n    <Grid container  className={classes.root}>\r\n<CircularProgress color=\"secondary\" />\r\n</Grid>\r\n}\r\n{/* <p className=\"animate__animated animate__lightSpeedInRight\"> Loading...</p> */}\r\n\r\n{/* <div className=\"card-grid  animate__animated animate__zoomIn\"> */}\r\n<Grid container spacing={3}>\r\n\r\n\r\n          \r\n        \r\n{\r\n    images.map(img=>(\r\n        <Grid item xs={12} xl={3} sm={6} key={img.id} lg={3} md={6} >\r\n        <GiftItems\r\n        \r\n        {...img}\r\n        />\r\n\r\n        </Grid>\r\n        )     \r\n        )\r\n}\r\n\r\n</Grid>\r\n\r\n{/* </div> */}\r\n\r\n\r\n</>\r\n  \r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { giftSearch } from \"../../helpers/GiftUri\";\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n const [state, setState]=useState({\r\n     data:[],\r\n     loading:true\r\n });\r\n \r\n    useEffect(()=>{\r\n        giftSearch(category)\r\n        .then(img=>{\r\nsetTimeout(() => {\r\n    setState({\r\n       data:img,\r\n       loading:false \r\n    })\r\n}, 1500);\r\n        });\r\n    },[category]);\r\nreturn state;\r\n}\r\n","import React from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      width: '100%',\r\n      justifyContent:'center'\r\n    },\r\n  });\r\nexport const Header = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n        <Grid container  className={classes.root}>\r\n        <Typography variant=\"h2\" color='secondary'  >\r\n          Gift Expert\r\n      </Typography>\r\n        </Grid>\r\n            \r\n        </>\r\n    )\r\n}\r\n","import React,{useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GiftGrid } from './components/GiftGrid'\r\nimport { Header } from './components/Header'\r\n\r\n const GiftExpert = () => {\r\n     const [categories, setCategories] = useState([])\r\n    \r\n    //  const handleAdd =()=>{\r\n    //      //spread con arrays\r\n    //    setCategories([...categories ,'Sailos Moon'])\r\n    //  setCategoris(cat=>[...cats,'Sailor Moon])\r\n    //  }\r\n    \r\n     return (\r\n        <>\r\n            <Header/>\r\n           <hr/>\r\n      <AddCategory setCategories={setCategories}/>\r\n           <hr/>\r\n           <ol>\r\n               {\r\n                   categories.map(cat=>(\r\n                    \r\n                    <GiftGrid key={cat} categoria={cat}/>\r\n                \r\n                   ))\r\n               \r\n                  \r\n               }\r\n               </ol>\r\n        </>\r\n    )\r\n}\r\nexport default GiftExpert;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GiftExpert from './giftexpert'\nReactDOM.render(\n <GiftExpert/>\n   \n,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}